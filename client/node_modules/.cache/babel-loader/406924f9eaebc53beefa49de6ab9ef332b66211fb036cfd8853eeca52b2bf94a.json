{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nconst AdminCheck = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem('token');\n      const role = localStorage.getItem('role');\n      if (!token) {\n        setIsAuthenticated(false);\n        setIsAdmin(false);\n        return;\n      }\n      try {\n        const response = await axios.get('http://localhost:3000/api/user/auth', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setIsAuthenticated(true);\n        setIsAdmin(role === 'ADMIN');\n      } catch (error) {\n        setIsAuthenticated(false);\n        setIsAdmin(false);\n      }\n    };\n    checkAuth();\n  }, []);\n  if (!isAuthenticated) {\n    return null; // или редирект на страницу входа\n  }\n  return isAdmin ? children : null;\n};\n_s(AdminCheck, \"wqYoM5Zkli0xb0Rjmti0YIIgN1M=\");\n_c = AdminCheck;\nexport default AdminCheck;\nvar _c;\n$RefreshReg$(_c, \"AdminCheck\");","map":{"version":3,"names":["React","useEffect","useState","axios","AdminCheck","children","_s","isAuthenticated","setIsAuthenticated","isAdmin","setIsAdmin","checkAuth","token","localStorage","getItem","role","response","get","headers","Authorization","error","_c","$RefreshReg$"],"sources":["/Users/yarikmakoveev/Desktop/for_slavik/client/src/middleware/AdminCheck.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst AdminCheck = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem('token');\n      const role = localStorage.getItem('role');\n      if (!token) {\n        setIsAuthenticated(false);\n        setIsAdmin(false);\n        return;\n      }\n\n      try {\n        const response = await axios.get('http://localhost:3000/api/user/auth', {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        setIsAuthenticated(true);\n        setIsAdmin(role === 'ADMIN');\n      } catch (error) {\n        setIsAuthenticated(false);\n        setIsAdmin(false);\n      }\n    };\n\n    checkAuth();\n  }, []);\n\n  if (!isAuthenticated) {\n    return null; // или редирект на страницу входа\n  }\n\n  return isAdmin ? children : null;\n};\n\nexport default AdminCheck;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAE7CD,SAAS,CAAC,MAAM;IACd,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMC,IAAI,GAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;MACzC,IAAI,CAACF,KAAK,EAAE;QACVJ,kBAAkB,CAAC,KAAK,CAAC;QACzBE,UAAU,CAAC,KAAK,CAAC;QACjB;MACF;MAEA,IAAI;QACF,MAAMM,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,qCAAqC,EAAE;UACtEC,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUP,KAAK;UAChC;QACF,CAAC,CAAC;QACFJ,kBAAkB,CAAC,IAAI,CAAC;QACxBE,UAAU,CAACK,IAAI,KAAK,OAAO,CAAC;MAC9B,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdZ,kBAAkB,CAAC,KAAK,CAAC;QACzBE,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAACJ,eAAe,EAAE;IACpB,OAAO,IAAI,CAAC,CAAC;EACf;EAEA,OAAOE,OAAO,GAAGJ,QAAQ,GAAG,IAAI;AAClC,CAAC;AAACC,EAAA,CApCIF,UAAU;AAAAiB,EAAA,GAAVjB,UAAU;AAsChB,eAAeA,UAAU;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}